name: Guy Ziv Pipeline
env:
  FLAG_SHOW_OUTPUT: 0
  APP_NAME: "my-app"

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  my_playground:
    runs-on: ubuntu-latest

    steps:
    - run: mkdir /tmp/${{ env.APP_NAME }}
    - name: test01
      working-directory: /tmp/${{ env.APP_NAME }}
      run: |
        echo "Current dir: $(pwd)"
        echo "ziGuy test"
        exit 0
    

    
  build:
    needs: [my_playground]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 8
      uses: actions/setup-java@v2
      with:
        java-version: '8' # doesn't work with later versions
        distribution: 'adopt'
          
    - name: Build with Maven      
      working-directory: ${{ env.APP_NAME }}
      run: |
          mvn -B package
          ls -lR target
    - name: Packaging build
      uses: actions/upload-artifact@v2
      with:
        name: target
        path: ${{ env.APP_NAME }}/target



  package_result:
    needs: [build]
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Get build
      uses: actions/download-artifact@v2
      with:
        name: target
    
    - name: isolate exec
      uses: actions/upload-artifact@v2
      with:
        name: final_exec
        path: ${{ env.APP_NAME }}-1.0-SNAPSHOT.jar



  create_push_docker:
    # 2 Do: check why the following action didn't find Docerfile: docker/build-push-action@v2
    needs: [package_result]
    runs-on: ubuntu-latest

    steps:
    - name: Get build
      uses: actions/download-artifact@v2
      with:
        name: final_exec
    - name: Build Dockerfile
        # echo "FROM openjdk:8" >>Dockerfile
      run: |
        echo "FROM openjdk:8-jre-alpine3.9" >>Dockerfile
        echo "MAINTAINER Guy Ziv guyziv84@gmail.com" >>Dockerfile
        echo "WORKDIR /usr/src/${{ env.APP_NAME }}" >>Dockerfile
        echo "COPY ${{ env.APP_NAME }}-1.0-SNAPSHOT.jar /usr/src/${{ env.APP_NAME }}/" >>Dockerfile
        echo "WORKDIR /usr/src/${{ env.APP_NAME }}" >>Dockerfile
        echo 'CMD ["java", "-jar", "/usr/src/${{ env.APP_NAME }}/${{ env.APP_NAME }}-1.0-SNAPSHOT.jar"]' >>Dockerfile
        
        docker build -f Dockerfile -t ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.APP_NAME }} .
        
        docker images

    - name: Push docker to repo
      run: |
        docker images
        docker login --username ${{ secrets.DOCKER_HUB_USERNAME }} --password ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.APP_NAME }}



  pull_run_docker:
    needs: [create_push_docker]
    runs-on: ubuntu-latest

    steps:
    - name: Pull docker from repo
      run: |
        docker login --username ${{ secrets.DOCKER_HUB_USERNAME }} --password ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
        docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.APP_NAME }}
        echo -e "\n\n\n\n\n\n\n"
        docker run ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.APP_NAME }}
        echo -e "\n\n\n\n\n\n\n"
  


  meaning_of_life:
    needs: [pull_docker_from_repo]
    runs-on: ubuntu-latest

    steps:
    - name: And now for the answer to the Ultimate Question of Life, the Universe, and Everything
      run: |
        echo "Umm... I don't want to spoiler, Moty:)"
        echo "Well, now section 6 in the doc file is in your hands."


