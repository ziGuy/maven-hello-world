# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven
env:
  FLAG_SHOW_OUTPUT: 0

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  my_playground:
    runs-on: ubuntu-latest

    steps:
    - run: mkdir /tmp/test
    - name: test01
      working-directory: /tmp/test
      run: |
        echo "FROM openjdk:8" >>Dockerfile
        echo "MAINTAINER Guy Ziv guyziv84@gmail.com" >>Dockerfile
      # echo "COPY ${jar_path} /usr/src/${app_name}/" >>Dockerfile
      # echo "WORKDIR /usr/src/${app_name}" >>Dockerfile
      # echo "CMD ["java", "-jar", "/usr/src/${app_name}/${jar_path}"]" >>Dockerfile
        echo 'CMD ["date"]' >>Dockerfile
        
        cat Dockerfile
        docker build -f Dockerfile -t my-app .
        ls -l
        
        echo "Current dir: $(pwd)"
        echo "ziGuy test"
        exit 1
    
    
  build:
    needs: [my_playground]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 8
      uses: actions/setup-java@v2
      with:
        java-version: '8' # doesn't work with later versions
        distribution: 'adopt'
          
    - name: Build with Maven      
      working-directory: my-app
      run: |
          mvn -B package
          ls -lR target
    - name: Packaging build
      uses: actions/upload-artifact@v2
      with:
        name: target
        path: my-app/target



  package_result:
    needs: [build]
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Get build
      uses: actions/download-artifact@v2
      with:
        name: target
    
    - name: isolate exec
      uses: actions/upload-artifact@v2
      with:
        name: final_exec
        path: my-app-1.0-SNAPSHOT.jar



  create_docker:
    needs: [package_result]
    runs-on: ubuntu-latest

    steps:
    - name: Get build
      uses: actions/download-artifact@v2
      with:
        name: final_exec
    
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1

    - name: Image digest
      run: echo ${{ steps.buildx.outputs.digest }}

    - name: dummy
      run: |
        ls -l
        echo "ls -l /home/runner/work/maven-hello-world/maven-hello-world"
        ls -l /home/runner/work/maven-hello-world/maven-hello-world
      # echo find
      # find /tmp -name "Dockerfile" 2>/dev/null
    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        # context: .
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/rafael:latest

    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}
    
    - name: temp
      run: date
    # - run: |
    #     pwd
    #     ls -l
    


  #   - uses: actions/checkout@v2
  #   - name: Set up JDK 8
  #   # - name: Display results
  #   #   if: ${{ env.FLAG_SHOW_OUTPUT == 1 }}
  #   #   run: java -jar my-app/target/my-app-1.0-SNAPSHOT.jar
    
  #   # - run: ls -Rl my-app/target
  #   # # - cd my-app/target
  #   - name: Verifying
  #     working-directory: my-app
  #     run: |
  #       mvn --batch-mode --update-snapshots verify
  #       mkdir staging && cp target/*.jar staging
  #       ls -Rl staging
  #   - name: Packaging
  #     uses: actions/upload-artifact@v2
  #     with:
  #       name: Package
  #       path: my-app/staging

      
  # # Packaging:     
  # #   needs: [build]
  # #   runs-on: ubuntu-latest
    
  # #   steps:
  # #   - uses: actions/checkout@v2
  # #   - uses: actions/setup-java@v2
  # #     with:
  # #       java-version: '8' # doesn't work with later versions
  # #       distribution: 'adopt'
  # #   - name: Show file structure
  # #     run: ls -Rl my-app/target
  # #   - run: mvn --batch-mode --update-snapshots verify
  # #   - run: mkdir staging && cp my-app/target/*.jar staging
  # #   - uses: actions/upload-artifact@v2
  # #     with:
  # #       name: Package
  # #       path: staging



  # # Packaging:     
  # #   needs: [build]
  # #   runs-on: ubuntu-latest
    
  # #   steps:
  # #   - uses: actions/checkout@v2
  # #   - name: Packaging      
  # #     uses: actions/upload-artifact@v2
  # #     with:
  # #       name: Package
  # #       path: staging
  # #       run: |
  # #            mvn --file my-app/pom.xml --batch-mode --update-snapshots verify
  # #            mkdir staging && cp my-app/target/*.jar staging

  # #   - name: Show file structure
  # #     run: |
  # #       ls -Rl my-app/target
